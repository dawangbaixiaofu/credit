<mxfile host="65bd71144e">
    <diagram id="AnLf9vRbDRtYSXLCQUEJ" name="Page-1">
        <mxGraphModel dx="1404" dy="1656" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
            <root>
                <mxCell id="0"/>
                <mxCell id="1" parent="0"/>
                <mxCell id="2" value="modeling procedure" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="90" y="80" width="440" height="300" as="geometry"/>
                </mxCell>
                <mxCell id="3" value="&lt;div style=&quot;text-align: justify;&quot;&gt;--------------train----------------&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;stat positive and negtive&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;split train, test&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;balance train sample ratio. some&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;model can implement this by param &quot;class_weight='balance'&quot;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;why pos:neg = 1:1 is better? From perspective of Loss, when&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;calaulates the loss then pay more attention to label that contains&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;less samples.&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;metrics&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;model&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;hyper parameters tune&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;metrics on the test data&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;feature importance&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;visualize the learning curve, validate curve (hyper param tune visualization)&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;model persistence&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="2">
                    <mxGeometry x="10" y="30" width="420" height="260" as="geometry"/>
                </mxCell>
                <mxCell id="4" value="tree model" style="swimlane;whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="620" y="80" width="390" height="510" as="geometry"/>
                </mxCell>
                <mxCell id="6" value="&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;sklearn.tree.DecisionTreeClassifier&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;---------------------------------------------------------&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;Hyper-params:&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;criterion:['gini', 'entropy', 'log_loss'],&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;splitter:['best','random'],&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;max_depth:[None, int, ],&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;min_samples_split:[2, int, ],&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;min_samples_leaf:[1, int, ],&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;min_weight_fraction_leaf:[0.0, float,],&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;max_features:[None, int, float, sqrt, log2],&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;random_state:int,&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;max_leaf_nodes:[None, int,],&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;min_impuriry_decrease:[0.0, float,],&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;class_weight:[None, {0:1, 1:1}, 'balanced',],&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;monotonic_cst:np.array([1, 0, -1,...)],&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;# 1:monotonic increase 2: monotonic decrease 0:no constraint&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;------------------------------------------------------------------------------------&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;attributes:&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;classes_,&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;n_classes_,&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;feature_importances_,&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;n_features_in_ :int,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;feature_names_in_ :list,&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;n_outputs_,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;tree_,&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;-------------------------------------------------------------------------------------&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;Methods:&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;Apply(x): return index of leaf that each sample is predicted as,&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;fit(x, y): build a decision tree classifier from training set(x,y),&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;predict(x):&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;predict_proba(x):&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="4">
                    <mxGeometry x="15" y="30" width="360" height="470" as="geometry"/>
                </mxCell>
                <mxCell id="7" value="&lt;font face=&quot;Helvetica&quot;&gt;metrics&lt;/font&gt;" style="swimlane;whiteSpace=wrap;html=1;fontFamily=Times New Roman;" vertex="1" parent="1">
                    <mxGeometry x="160" y="-270" width="320" height="270" as="geometry"/>
                </mxCell>
                <mxCell id="8" value="&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;sklearn.metrics&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;--------------------------------------&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;roc_curve(y, pred, pos_label)-&amp;gt;fpr, tpr, thresholds&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;auc(fpr, tpr): AUC&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;roc_auc_score(y, pred) -&amp;gt; auc&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;precision_score(y, pred):precision&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;accuracy_score(y, pred): accuracy&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;recall_score(),&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;f1_score(): F1,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;log_loss(),&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;KS&lt;/span&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontFamily=Helvetica;" vertex="1" parent="7">
                    <mxGeometry x="10" y="25" width="280" height="170" as="geometry"/>
                </mxCell>
                <mxCell id="9" value="Hyper-parameter Optimizer" style="swimlane;whiteSpace=wrap;html=1;fontFamily=Helvetica;" vertex="1" parent="1">
                    <mxGeometry x="1070" y="80" width="560" height="510" as="geometry"/>
                </mxCell>
                <mxCell id="11" value="&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;sklearn.model_selection&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;--------------------------------------------------&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;GridSearchCV&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;b&gt;params:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;estimator,&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;param_grid:{param1:[values, ..], param2:[values, ...]},&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;scoring: str, callable,list, dict,&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;n_jobs,&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;rfit: refit an estimator using the best found params on the whole datasets,&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;cv:int, default is 5-fold cross-validation,&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;verbose: int,&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;return_train_score: bool,&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;b&gt;attributes:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;cv_results_:{'param': np.array(value), ...},&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;best_estimator_,&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;best_score_: mean cross-validate score of the best estimator,&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;best_params_:dict,&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;best_index_:int, the index of (cv_results_) which corresponds to the best candidate param setting,&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;scorer_:func or dict,&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;n_splts:int,&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;refit_time_: seconds used for refitting the best model on the whole datasets,&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;b&gt;methods:&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;fit(x[,y]),&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;get_params(),&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;predict(x): call the predict on the estimator with the best found params,&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;predict_proba(x),&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;score(x[,y]): return the score on the given data, the estimator has been refit&lt;/div&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontFamily=Helvetica;" vertex="1" parent="9">
                    <mxGeometry x="10" y="30" width="540" height="470" as="geometry"/>
                </mxCell>
                <mxCell id="12" value="elements for Hyper-parameter Opt" style="swimlane;whiteSpace=wrap;html=1;fontFamily=Helvetica;" vertex="1" parent="1">
                    <mxGeometry x="1110" y="-280" width="455" height="280" as="geometry"/>
                </mxCell>
                <mxCell id="13" value="&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;model_selection.ParameterGrid&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;input:&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;{param1: [value,...], ...}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;output:&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;[{'param1':value, ...}, ..., ]&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;--------------------------------------------------&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;metrics.make_scorer&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;input:&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;score_func(or log func) params: (y, y_pred, **kwargs),&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;reponse_method: {'predict_proba', 'decision_function', 'predict'} or list&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;which provides the method name in order of preference. return the first method&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;which implementd by estimator.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;greater_is_better:True,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;**kwargs: args for score_func&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;output:&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;scorer: callable&lt;/span&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontFamily=Helvetica;" vertex="1" parent="12">
                    <mxGeometry x="7.5" y="30" width="440" height="240" as="geometry"/>
                </mxCell>
                <mxCell id="14" value="model persistence" style="swimlane;whiteSpace=wrap;html=1;fontFamily=Helvetica;" vertex="1" parent="1">
                    <mxGeometry x="-340" y="45" width="270" height="370" as="geometry"/>
                </mxCell>
                <mxCell id="15" value="&lt;div style=&quot;text-align: justify;&quot;&gt;--------------------&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;pickle&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;pickle.dump(obj, file_obj)&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;pickle.load(file_obj)&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;--------------------&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;joblib: more efficient for large array&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;joblib.dump(obj, file.joblib)&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;joblib.load(file.joblib)&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;---------------------------&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;scops.io: more secure&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;import scops.io as sio&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;sio.dump(obj, file)&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;sio.load(file)&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontFamily=Helvetica;" vertex="1" parent="14">
                    <mxGeometry x="30" y="55" width="210" height="260" as="geometry"/>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
</mxfile>